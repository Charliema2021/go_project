package main

// 位运算
import "fmt"

// 补码~！~！~
//	1、正数的原码、反码、补码都一样
//	2、负数的反码是原码符号位不便，其他取反；负数的补码是其反码+1
//  3、0的反码和补码都是0
// 计算机运行时，都是以补码的形式进行运算的
func main() {
	// 按位与&， 两位全为1，结果为1，否则为0
	fmt.Println(2 & 3)
	//	2的补码 0000 0010
	//	3的补码 0000 0011
	//  2&3     0000 0010  = 2
	//按位或|,两位至少有一个为1，结果为1，否则为0
	fmt.Println(2 | 3)
	//	2的补码 0000 0010
	//	3的补码 0000 0011
	//  2|3     0000 0011 = 3
	//按位异或^,两位一个0一个1，则结果为1，否则为0
	fmt.Println(-2 ^ 3)
	//	-2的原码 1000 0010 ———>反码:1111 1101
	//	-2的补码 1111 1110
	//	3的补码  0000 0011
	//  -2^3补码 1111 1101 ———>反码：1111 1100 ————>原码：1000 0011= -3

}
